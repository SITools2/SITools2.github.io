Ext.data.JsonP.Ext_ux_ManagedIFrame_ComponentAdapter({"alternateClassNames":[],"inheritdoc":null,"singleton":false,"statics":{"cfg":[],"method":[],"property":[],"event":[],"css_var":[],"css_mixin":[]},"requires":[],"mixins":[],"code_type":"assignment","inheritable":false,"members":{"cfg":[{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"autoLoad","id":"cfg-autoLoad","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"autoScroll","id":"cfg-autoScroll","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"defaultSrc","id":"cfg-defaultSrc","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"disableMessaging","id":"cfg-disableMessaging","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"eventsFollowFrameLinks","id":"cfg-eventsFollowFrameLinks","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"focusOnLoad","id":"cfg-focusOnLoad","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"frameConfig","id":"cfg-frameConfig","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"unsupportedText","id":"cfg-unsupportedText","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"useShim","id":"cfg-useShim","tagname":"cfg"}],"method":[{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"constructor","id":"method-constructor","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"doAutoLoad","id":"method-doAutoLoad","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getFrame","id":"method-getFrame","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getFrameBody","id":"method-getFrameBody","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getFrameDoc","id":"method-getFrameDoc","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getFrameDocument","id":"method-getFrameDocument","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getFrameWindow","id":"method-getFrameWindow","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getId","id":"method-getId","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getState","id":"method-getState","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"getUpdater","id":"method-getUpdater","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"load","id":"method-load","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"resetFrame","id":"method-resetFrame","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"sendMessage","id":"method-sendMessage","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"setAutoScroll","id":"method-setAutoScroll","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"setLocation","id":"method-setLocation","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"setMIFEvents","id":"method-setMIFEvents","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"setSrc","id":"method-setSrc","tagname":"method"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"submitAsTarget","id":"method-submitAsTarget","tagname":"method"}],"event":[{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"blur","id":"event-blur","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"documentloaded","id":"event-documentloaded","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"domready","id":"event-domready","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"exception","id":"event-exception","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"focus","id":"event-focus","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"message","id":"event-message","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"reset","id":"event-reset","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"resize","id":"event-resize","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"scroll","id":"event-scroll","tagname":"event"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"unload","id":"event-unload","tagname":"event"}],"property":[{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"frameEl","id":"property-frameEl","tagname":"property"},{"meta":{},"owner":"Ext.ux.ManagedIFrame.ComponentAdapter","name":"version","id":"property-version","tagname":"property"}],"css_var":[],"css_mixin":[]},"component":false,"meta":{"author":["Doug Hendricks. doug[always-At]theactivegroup.com"]},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"superclasses":[],"name":"Ext.ux.ManagedIFrame.ComponentAdapter","files":[{"href":"mif.html#Ext-ux-ManagedIFrame-ComponentAdapter","filename":"mif.js"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter' target='_blank'>mif.js</a></div></pre><div class='doc-contents'><p>@version 2.1.4\n@donate <a target=\"tag_donate\" href=\"http://donate.theactivegroup.com\"><img border=\"0\" src=\"http://www.paypal.com/en_US/i/btn/x-click-butcc-donate.gif\" border=\"0\" alt=\"Make a donation to support ongoing development\"></a>\n@copyright 2007-2010, Active Group, Inc.  All rights reserved.\n@license <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL 3.0</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-autoLoad' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-autoLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-autoLoad' class='name expandable'>autoLoad</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/Object</span></div><div class='description'><div class='short'>Loads this Components frame after the Component is rendered with content returned from an\nXHR call or optionally from...</div><div class='long'><p>Loads this Components frame after the Component is rendered with content returned from an\nXHR call or optionally from a form submission.  See Ext.ux.ManagedIFrame.ComponentAdapter-load and Ext.ux.ManagedIFrame.ComponentAdapter-submitAsTarget methods for\navailable configuration options.\n@default null</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-autoScroll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-autoScroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-autoScroll' class='name expandable'>autoScroll</a><span> : Boolean</span></div><div class='description'><div class='short'>True to use overflow:'auto' on the frame element and show scroll bars automatically when necessary,\nfalse to clip any...</div><div class='long'><p>True to use overflow:'auto' on the frame element and show scroll bars automatically when necessary,\nfalse to clip any overflowing content (defaults to true).\n@default true</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-defaultSrc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-defaultSrc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-defaultSrc' class='name expandable'>defaultSrc</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>the default src property assigned to the Managed Frame when the component is rendered. ...</div><div class='long'><p>the default src property assigned to the Managed Frame when the component is rendered.\n@default null</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-disableMessaging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-disableMessaging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-disableMessaging' class='name expandable'>disableMessaging</a><span> : Boolean</span></div><div class='description'><div class='short'>False to enable cross-frame messaging API\n@default true ...</div><div class='long'><p>False to enable cross-frame messaging API\n@default true</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-eventsFollowFrameLinks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-eventsFollowFrameLinks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-eventsFollowFrameLinks' class='name expandable'>eventsFollowFrameLinks</a><span> : Boolean</span></div><div class='description'><div class='short'>set true to propagate domready and documentloaded\nevents anytime the IFRAME's URL changes\n@default true ...</div><div class='long'><p>set true to propagate domready and documentloaded\nevents anytime the IFRAME's URL changes\n@default true</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-focusOnLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-focusOnLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-focusOnLoad' class='name expandable'>focusOnLoad</a><span> : Object</span></div><div class='description'><div class='short'>True to set focus on the frame Window as soon as its document\nreports loaded. ...</div><div class='long'><p>True to set focus on the frame Window as soon as its document\nreports loaded.  (Many external sites use IE's document.createRange to create\nDOM elements, but to be successfull IE requires that the FRAME have focus before\nthe method is called)\n@default false (true for Internet Explorer)</p>\n</div></div></div><div id='cfg-frameConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-frameConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-frameConfig' class='name expandable'>frameConfig</a><span> : object</span></div><div class='description'><div class='short'>Frames DOM configuration options\nThis optional configuration permits override of the IFRAME's DOM attributes\n@example...</div><div class='long'><p>Frames DOM configuration options\nThis optional configuration permits override of the IFRAME's DOM attributes\n@example</p>\n\n<pre><code>      frameConfig : {\n          name : 'framePreview',\n          frameborder : 1,\n          allowtransparency : true\n         }\n</code></pre>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-unsupportedText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-unsupportedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-unsupportedText' class='name expandable'>unsupportedText</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>Text to display when the IFRAMES/FRAMESETS are disabled by the browser. ...</div><div class='long'><p>Text to display when the IFRAMES/FRAMESETS are disabled by the browser.</p>\n<p>Defaults to: <code>&quot;Inline frames are NOT enabled\\/supported by your browser.&quot;</code></p></div></div></div><div id='cfg-useShim' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-cfg-useShim' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-cfg-useShim' class='name expandable'>useShim</a><span> : Boolean</span></div><div class='description'><div class='short'>True to use to create a transparent shimming agent for use in masking the frame during\ndrag operations. ...</div><div class='long'><p>True to use to create a transparent shimming agent for use in masking the frame during\ndrag operations.\n@default false</p>\n<p>Defaults to: <code>false</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-frameEl' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-property-frameEl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-property-frameEl' class='name expandable'>frameEl</a><span> : Object</span></div><div class='description'><div class='short'>An Ext.ux.ManagedIFrame.Element reference to rendered frame Element. ...</div><div class='long'><p>An Ext.ux.ManagedIFrame.Element reference to rendered frame Element.</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='property-version' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-property-version' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-property-version' class='name expandable'>version</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>2.14</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-constructor' class='name expandable'>Ext.ux.ManagedIFrame.ComponentAdapter</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>@desc\nAbstract class. ...</div><div class='long'><p>@desc\nAbstract class.  This class should not be instantiated.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-doAutoLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-doAutoLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-doAutoLoad' class='name expandable'>doAutoLoad</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getFrame' class='name expandable'>getFrame</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a></div><div class='description'><div class='short'>Returns the Ext.ux.ManagedIFrame.Element of the frame. ...</div><div class='long'><p>Returns the <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> of the frame.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a></span><div class='sub-desc'><p>this.frameEl</p>\n</div></li></ul></div></div></div><div id='method-getFrameBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getFrameBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getFrameBody' class='name expandable'>getFrameBody</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></div><div class='description'><div class='short'>If sufficient privilege exists, returns the frame's current document\nbody as an HTMLElement. ...</div><div class='long'><p>If sufficient privilege exists, returns the frame's current document\nbody as an HTMLElement.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a></span><div class='sub-desc'><p>The frame document body or Null if access to</p>\n\n<pre><code>    document object was denied.\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getFrameDoc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getFrameDoc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getFrameDoc' class='name expandable'>getFrameDoc</a>( <span class='pre'></span> ) : Ext.Element object</div><div class='description'><div class='short'>Get the embedded iframe's document as an Ext.Element. ...</div><div class='long'><p>Get the embedded iframe's document as an <a href=\"#!/api/Ext.Element\" rel=\"Ext.Element\" class=\"docClass\">Ext.Element</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.Element object</span><div class='sub-desc'><p>or null if unavailable</p>\n</div></li></ul></div></div></div><div id='method-getFrameDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getFrameDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getFrameDocument' class='name expandable'>getFrameDocument</a>( <span class='pre'></span> ) : HTMLElement</div><div class='description'><div class='short'>If sufficient privilege exists, returns the frame's current document\nas an HTMLElement. ...</div><div class='long'><p>If sufficient privilege exists, returns the frame's current document\nas an HTMLElement.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>HTMLElement</span><div class='sub-desc'><p>The frame document or false if access to</p>\n\n<pre><code>    document object was denied.\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getFrameWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getFrameWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getFrameWindow' class='name expandable'>getFrameWindow</a>( <span class='pre'></span> ) : Window</div><div class='description'><div class='short'>Returns the frame's current window object. ...</div><div class='long'><p>Returns the frame's current window object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Window</span><div class='sub-desc'><p>The frame Window object.</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>//Make it state-aware ...</div><div class='long'><p>//Make it state-aware</p>\n</div></div></div><div id='method-getUpdater' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-getUpdater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-getUpdater' class='name expandable'>getUpdater</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Updater\" rel=\"Ext.ux.ManagedIFrame.Updater\" class=\"docClass\">Ext.ux.ManagedIFrame.Updater</a></div><div class='description'><div class='short'>Get the Ext.ux.ManagedIFrame.Updater for this panel's iframe. ...</div><div class='long'><p>Get the Ext.ux.ManagedIFrame.Updater for this panel's iframe. Enables\nAjax-based document replacement of this panel's iframe document.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Updater\" rel=\"Ext.ux.ManagedIFrame.Updater\" class=\"docClass\">Ext.ux.ManagedIFrame.Updater</a></span><div class='sub-desc'><p>The Updater</p>\n</div></li></ul></div></div></div><div id='method-load' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-load' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-load' class='name expandable'>load</a>( <span class='pre'>Object/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> loadCfg</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Loads this Components's frame immediately with content returned from an\nXHR call. ...</div><div class='long'><p>Loads this Components's frame immediately with content returned from an\nXHR call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loadCfg</span> : Object/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>A config object containing any of the following</p>\n\n<pre><code>       options:\n</code></pre>\n\n<pre><code>     mifPanel.load({\n        url: &quot;your-url.php&quot;,\n        params: {param1: &quot;foo&quot;, param2: &quot;bar&quot;}, // or a URL encoded string\n        callback: yourFunction,\n        scope: yourObject, // optional scope for the callback\n        discardUrl: false,\n        nocache: false,\n        text: &quot;Loading...&quot;,\n        timeout: 30,\n        scripts: false,\n        submitAsTarget : false,  //optional true, to use Form submit to load the frame (see submitAsTarget method)\n        renderer:{render:function(el, response, updater, callback){....}}  //optional custom renderer\n     });\n\n</code></pre>\n\n\n<p>The only required property is url. The optional properties</p>\n\n<pre><code>       nocache, text and scripts are shorthand for\n       disableCaching, indicatorText and loadScripts and are used\n       to set their associated property on this panel Updater\n       instance.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-resetFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-resetFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-resetFrame' class='name expandable'>resetFrame</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> src], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [Object scope]</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Reset the embedded frame to a neutral domain state and clear its contents ...</div><div class='long'><p>Reset the embedded frame to a neutral domain state and clear its contents</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>src</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>A specific reset string (eg. 'about:blank')</p>\n\n<pre><code>       to use for resetting the frame.\n</code></pre>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>A callback function invoked when the</p>\n\n<pre><code>       frame reset is complete.\n</code></pre>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>scope by which the callback function is</p>\n\n<pre><code>       invoked.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-sendMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-sendMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-sendMessage' class='name expandable'>sendMessage</a>( <span class='pre'>Mixed message, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> tag, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> origin</span> )</div><div class='description'><div class='short'>dispatch a message to the embedded frame-window context (same-origin frames only)\n@name sendMessage\n@memberOf Ext.ux....</div><div class='long'><p>dispatch a message to the embedded frame-window context (same-origin frames only)\n@name sendMessage\n@memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Mixed<div class='sub-desc'><p>The message payload.  The payload can be any supported JS type.</p>\n</div></li><li><span class='pre'>tag</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Optional reference tag</p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Optional domain designation of the sender (defaults\nto document.domain).</p>\n</div></li></ul></div></div></div><div id='method-setAutoScroll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-setAutoScroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-setAutoScroll' class='name expandable'>setAutoScroll</a>( <span class='pre'>Boolean auto</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Sets the autoScroll state for the frame. ...</div><div class='long'><p>Sets the autoScroll state for the frame.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>auto</span> : Boolean<div class='sub-desc'><p>True to set overflow:auto on the frame, false for overflow:hidden</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setLocation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-setLocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-setLocation' class='name expandable'>setLocation</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> url], [Boolean discardUrl], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [Object scope]</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Sets the embedded Iframe location using its replace method. ...</div><div class='long'><p>Sets the embedded Iframe location using its replace method. Note: invoke the function with\nno arguments to refresh the iframe based on the current src value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>A string or reference to a Function that</p>\n\n<pre><code>       returns a URI string when called\n</code></pre>\n</div></li><li><span class='pre'>discardUrl</span> : Boolean (optional)<div class='sub-desc'><p>If not passed as <tt>false</tt></p>\n\n<pre><code>       the URL of this action becomes the default SRC attribute\n       for this iframe, and will be subsequently used in future\n       setSrc calls (emulates autoRefresh by calling setSrc\n       without params).\n</code></pre>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>A callback function invoked when the</p>\n\n<pre><code>       frame document has been fully loaded.\n</code></pre>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>scope by which the callback function is</p>\n\n<pre><code>       invoked.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setMIFEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-setMIFEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-setMIFEvents' class='name expandable'>setMIFEvents</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setSrc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-setSrc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-setSrc' class='name expandable'>setSrc</a>( <span class='pre'>[<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> url], [Boolean discardUrl], [<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> callback], [Object scope]</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Sets the embedded Iframe src property. ...</div><div class='long'><p>Sets the embedded Iframe src property. Note: invoke the function with\nno arguments to refresh the iframe based on the current src value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>A string or reference to a Function that</p>\n\n<pre><code>       returns a URI string when called\n</code></pre>\n</div></li><li><span class='pre'>discardUrl</span> : Boolean (optional)<div class='sub-desc'><p>If not passed as <tt>false</tt></p>\n\n<pre><code>       the URL of this action becomes the default SRC attribute\n       for this iframe, and will be subsequently used in future\n       setSrc calls (emulates autoRefresh by calling setSrc\n       without params).\n</code></pre>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>A callback function invoked when the</p>\n\n<pre><code>       frame document has been fully loaded.\n</code></pre>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>scope by which the callback function is</p>\n\n<pre><code>       invoked.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-submitAsTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-method-submitAsTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-method-submitAsTarget' class='name expandable'>submitAsTarget</a>( <span class='pre'>Object submitCfg</span> ) : <a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></div><div class='description'><div class='short'>Loads the Components frame with the response from a form submit to the\nspecified URL with the ManagedIframe.Element a...</div><div class='long'><p>Loads the Components frame with the response from a form submit to the\nspecified URL with the ManagedIframe.Element as it's submit target.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>submitCfg</span> : Object<div class='sub-desc'><p>A config object containing any of the following options:</p>\n\n<pre><code>     mifPanel.submitAsTarget({\n        form : formPanel.form,  //optional Ext.FormPanel, Ext form element, or HTMLFormElement\n        url: &quot;your-url.php&quot;,\n        params: {param1: &quot;foo&quot;, param2: &quot;bar&quot;}, // or a URL encoded string\n        callback: yourFunction,  //optional\n        scope: yourObject, // optional scope for the callback\n        method: 'POST', //optional form.action (default:'POST')\n        encoding : \"multipart/form-data\" //optional, default HTMLForm default\n     });\n\n</code></pre>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Component\" rel=\"Ext.ux.ManagedIFrame.Component\" class=\"docClass\">Ext.ux.ManagedIFrame.Component</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-blur' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-blur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-blur' class='name expandable'>blur</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl, Ext.Event e</span> )</div><div class='description'><div class='short'>Fires when the frame is blurred (loses focus). ...</div><div class='long'><p>Fires when the frame is blurred (loses focus). @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li><li><span class='pre'>e</span> : Ext.Event<div class='sub-desc'><p>Note: This event is only available when overwriting the</p>\n\n<pre><code>       iframe document using the update method and to pages\n       retrieved from a \"same domain\". Returning false from the\n       eventHandler [MAY] NOT cancel the event, as this event is\n       NOT ALWAYS cancellable in all browsers.\n</code></pre>\n</div></li></ul></div></div></div><div id='event-documentloaded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-documentloaded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-documentloaded' class='name expandable'>documentloaded</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl</span> )</div><div class='description'><div class='short'>Fires when the iFrame has reached a loaded/complete state. ...</div><div class='long'><p>Fires when the iFrame has reached a loaded/complete state. @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-domready' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-domready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-domready' class='name expandable'>domready</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> this.frameEl</span> )</div><div class='description'><div class='short'>Fires ONLY when an iFrame's Document(DOM) has reach a\nstate where the DOM may be manipulated (ie same domain policy)\n...</div><div class='long'><p>Fires ONLY when an iFrame's Document(DOM) has reach a\nstate where the DOM may be manipulated (ie same domain policy)\nNote: This event is only available when overwriting the iframe\ndocument using the update method and to pages retrieved from a \"same\ndomain\". Returning false from the eventHandler stops further event\n(documentloaded) processing. @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this.frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-exception' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-exception' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-exception' class='name expandable'>exception</a>( <span class='pre'>Ext.ux.MIF.Element frameEl, Error/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a> exception</span> )</div><div class='description'><div class='short'>Fires when the frame actions raise an error @memberOf Ext.ux.ManagedIFrame.ComponentAdapter ...</div><div class='long'><p>Fires when the frame actions raise an error @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : Ext.ux.MIF.Element<div class='sub-desc'>\n</div></li><li><span class='pre'>exception</span> : Error/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-focus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-focus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-focus' class='name expandable'>focus</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl, Ext.Event e</span> )</div><div class='description'><div class='short'>Fires when the frame gets focus. ...</div><div class='long'><p>Fires when the frame gets focus. Note: This event is only available\nwhen overwriting the iframe document using the update method and to\npages retrieved from a \"same domain\". Returning false from the\neventHandler [MAY] NOT cancel the event, as this event is NOT ALWAYS\ncancellable in all browsers. @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li><li><span class='pre'>e</span> : Ext.Event<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-message' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-message' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-message' class='name expandable'>message</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> this.frameEl</span> )</div><div class='description'><div class='short'>Fires upon receipt of a message generated by window.sendMessage\nmethod of the embedded Iframe.window object @memberOf...</div><div class='long'><p>Fires upon receipt of a message generated by window.sendMessage\nmethod of the embedded Iframe.window object @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this.frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-reset' class='name expandable'>reset</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl</span> )</div><div class='description'><div class='short'>Fires when the iFrame has been reset to a neutral domain state (blank document). ...</div><div class='long'><p>Fires when the iFrame has been reset to a neutral domain state (blank document).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-resize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-resize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-resize' class='name expandable'>resize</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl, Ext.Event e, Object documentSize, Object viewPortSize, Object viewSize</span> )</div><div class='description'><div class='short'>Fires when the frames window is resized. ...</div><div class='long'><p>Fires when the frames window is resized. Note: This event is only available\nwhen overwriting the iframe document using the update method and to\npages retrieved from a \"same domain\". @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li><li><span class='pre'>e</span> : Ext.Event<div class='sub-desc'>\n</div></li><li><span class='pre'>documentSize</span> : Object<div class='sub-desc'><p>A height/width object signifying the new document size</p>\n</div></li><li><span class='pre'>viewPortSize</span> : Object<div class='sub-desc'><p>A height/width object signifying the size of the frame's viewport</p>\n</div></li><li><span class='pre'>viewSize</span> : Object<div class='sub-desc'><p>A height/width object signifying the size of the frame's view</p>\n</div></li></ul></div></div></div><div id='event-scroll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-scroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-scroll' class='name expandable'>scroll</a>( <span class='pre'>Ext.ux.MIF.Element this, Ext.Event </span> )</div><div class='description'><div class='short'>Note: This event is only available when overwriting the iframe\ndocument using the update method and to pages retrieve...</div><div class='long'><p>Note: This event is only available when overwriting the iframe\ndocument using the update method and to pages retrieved from a \"same-origin\"\ndomain.  To prevent numerous scroll events from being raised use the <i>buffer</i> listener\noption to limit the number of times the event is raised.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : Ext.ux.MIF.Element<div class='sub-desc'><p>.</p>\n</div></li><li><span class='pre'></span> : Ext.Event<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-unload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.ManagedIFrame.ComponentAdapter'>Ext.ux.ManagedIFrame.ComponentAdapter</span><br/><a href='source/mif.html#Ext-ux-ManagedIFrame-ComponentAdapter-event-unload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.ManagedIFrame.ComponentAdapter-event-unload' class='name expandable'>unload</a>( <span class='pre'><a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a> frameEl, Ext.Event </span> )</div><div class='description'><div class='short'>Fires when(if) the frames window object raises the unload event\nNote: This event is only available when overwriting t...</div><div class='long'><p>Fires when(if) the frames window object raises the unload event\nNote: This event is only available when overwriting the iframe\ndocument using the update method and to pages retrieved from a \"same-origin\"\ndomain. Note: Opera does not raise this event. @memberOf <a href=\"#!/api/Ext.ux.ManagedIFrame.ComponentAdapter\" rel=\"Ext.ux.ManagedIFrame.ComponentAdapter\" class=\"docClass\">Ext.ux.ManagedIFrame.ComponentAdapter</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameEl</span> : <a href=\"#!/api/Ext.ux.ManagedIFrame.Element\" rel=\"Ext.ux.ManagedIFrame.Element\" class=\"docClass\">Ext.ux.ManagedIFrame.Element</a><div class='sub-desc'>\n</div></li><li><span class='pre'></span> : Ext.Event<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"id":"class-Ext.ux.ManagedIFrame.ComponentAdapter","html_meta":{"author":null},"tagname":"class","extends":null});