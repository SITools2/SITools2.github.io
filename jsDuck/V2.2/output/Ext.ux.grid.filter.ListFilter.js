Ext.data.JsonP.Ext_ux_grid_filter_ListFilter({"alternateClassNames":[],"inheritdoc":null,"singleton":false,"statics":{"cfg":[],"method":[],"property":[],"event":[],"css_var":[],"css_mixin":[]},"requires":[],"mixins":[],"code_type":"assignment","inheritable":false,"members":{"cfg":[{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"active","id":"cfg-active","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"columnAlias","id":"cfg-columnAlias","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"dataIndex","id":"cfg-dataIndex","tagname":"cfg"},{"meta":{},"owner":"Ext.util.Observable","name":"listeners","id":"cfg-listeners","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.ListFilter","name":"options","id":"cfg-options","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.ListFilter","name":"phpMode","id":"cfg-phpMode","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.ListFilter","name":"store","id":"cfg-store","tagname":"cfg"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"updateBuffer","id":"cfg-updateBuffer","tagname":"cfg"}],"method":[{"meta":{},"owner":"Ext.util.Observable","name":"addEvents","id":"method-addEvents","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"addListener","id":"method-addListener","tagname":"method"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"destroy","id":"method-destroy","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"enableBubble","id":"method-enableBubble","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"fireEvent","id":"method-fireEvent","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.Filter","name":"fireUpdate","id":"method-fireUpdate","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"getSerialArgs","id":"method-getSerialArgs","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"getValue","id":"method-getValue","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"hasListener","id":"method-hasListener","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"init","id":"method-init","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"isActivatable","id":"method-isActivatable","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"on","id":"method-on","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"onCheckChange","id":"method-onCheckChange","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"purgeListeners","id":"method-purgeListeners","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"relayEvents","id":"method-relayEvents","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"removeListener","id":"method-removeListener","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"resumeEvents","id":"method-resumeEvents","tagname":"method"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"serialize","id":"method-serialize","tagname":"method"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"setActive","id":"method-setActive","tagname":"method"},{"meta":{"private":true},"owner":"Ext.ux.grid.filter.ListFilter","name":"setValue","id":"method-setValue","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"suspendEvents","id":"method-suspendEvents","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"un","id":"method-un","tagname":"method"},{"meta":{},"owner":"Ext.ux.grid.filter.ListFilter","name":"validateRecord","id":"method-validateRecord","tagname":"method"}],"event":[{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"activate","id":"event-activate","tagname":"event"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"deactivate","id":"event-deactivate","tagname":"event"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"serialize","id":"event-serialize","tagname":"event"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"update","id":"event-update","tagname":"event"}],"property":[{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"active","id":"property-active","tagname":"property"},{"meta":{},"owner":"Ext.ux.grid.filter.Filter","name":"menu","id":"property-menu","tagname":"property"}],"css_var":[],"css_mixin":[]},"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"superclasses":["Ext.util.Observable","Ext.ux.grid.filter.Filter"],"name":"Ext.ux.grid.filter.ListFilter","files":[{"href":"ListFilter.html#Ext-ux-grid-filter-ListFilter","filename":"ListFilter.js"}],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a><div class='subclass '><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='docClass'>Ext.ux.grid.filter.Filter</a><div class='subclass '><strong>Ext.ux.grid.filter.ListFilter</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter' target='_blank'>ListFilter.js</a></div></pre><div class='doc-contents'><p>List filters are able to be preloaded/backed by an <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> to load\ntheir options the first time they are shown. ListFilter utilizes the\n<a href=\"#!/api/Ext.ux.menu.ListMenu\" rel=\"Ext.ux.menu.ListMenu\" class=\"docClass\">Ext.ux.menu.ListMenu</a> component.</p>\n\n\n<p>Although not shown here, this class accepts all configuration options\nfor <a href=\"#!/api/Ext.ux.menu.ListMenu\" rel=\"Ext.ux.menu.ListMenu\" class=\"docClass\">Ext.ux.menu.ListMenu</a>.</p>\n\n\n\n\n<p><b><u>Example Usage:</u></b></p>\n\n\n<pre><code>    \nvar filters = new <a href=\"#!/api/Ext.ux.grid.GridFilters\" rel=\"Ext.ux.grid.GridFilters\" class=\"docClass\">Ext.ux.grid.GridFilters</a>({\n    ...\n    filters: [{\n        type: 'list',\n        dataIndex: 'size',\n        phpMode: true,\n        // options will be used as data to implicitly creates an ArrayStore\n        options: ['extra small', 'small', 'medium', 'large', 'extra large']\n    }]\n});\n</code></pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-active' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-cfg-active' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-cfg-active' class='name expandable'>active</a><span> : Boolean</span></div><div class='description'><div class='short'>Indicates the initial status of the filter (defaults to false). ...</div><div class='long'><p>Indicates the initial status of the filter (defaults to false).</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-columnAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/sitoolsFilter.html#Ext-ux-grid-filter-Filter-cfg-columnAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-cfg-columnAlias' class='name expandable'>columnAlias</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>The Ext.data.Store columnAlias of the field this filter represents. ...</div><div class='long'><p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> columnAlias of the field this filter represents.</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-dataIndex' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-cfg-dataIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-cfg-dataIndex' class='name expandable'>dataIndex</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>The Ext.data.Store dataIndex of the field this filter represents. ...</div><div class='long'><p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> dataIndex of the field this filter represents.\nThe dataIndex does not actually have to exist in the store.</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-cfg-listeners' class='name expandable'>listeners</a><span> : Object</span></div><div class='description'><div class='short'>(optional) A config object containing one or more event handlers to be added to this\nobject during initialization. ...</div><div class='long'><p>(optional) <p>A config object containing one or more event handlers to be added to this\nobject during initialization.  This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple handlers at once.</p></p>\n\n<br><p><b><u>DOM events from ExtJs <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></u></b></p>\n\n\n<br><p>While <i>some</i> ExtJs Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this\n\n\n<p>is usually only done when extra value can be added. For example the <a href=\"#!/api/Ext.DataView\" rel=\"Ext.DataView\" class=\"docClass\">DataView</a>'s\n<b><code><a href=\"#!/api/Ext.DataView-event-click\" rel=\"Ext.DataView-event-click\" class=\"docClass\">click</a></code></b> event passing the node clicked on. To access DOM\nevents directly from a Component's HTMLElement, listeners must be added to the <i><a href=\"#!/api/Ext.Component-method-getEl\" rel=\"Ext.Component-method-getEl\" class=\"docClass\">Element</a></i> after the Component\nhas been rendered. A plugin can simplify this step:</p>\n\n<pre><code>// Plugin is configured with a listeners config object.\n// The Component is appended to the argument list of all handler functions.\nExt.DomObserver = Ext.extend(Object, {\n    constructor: function(config) {\n        this.listeners = config.listeners ? config.listeners : config;\n    },\n\n    // Component passes itself into plugin&#39;s init method\n    init: function(c) {\n        var p, l = this.listeners;\n        for (p in l) {\n            if (Ext.isFunction(l[p])) {\n                l[p] = this.createHandler(l[p], c);\n            } else {\n                l[p].fn = this.createHandler(l[p].fn, c);\n            }\n        }\n\n        // Add the listeners to the Element immediately following the render call\n        c.render = c.render.<a href=\"#!/api/Function-method-createSequence\" rel=\"Function-method-createSequence\" class=\"docClass\">createSequence</a>(function() {\n            var e = c.getEl();\n            if (e) {\n                e.on(l);\n            }\n        });\n    },\n\n    createHandler: function(fn, c) {\n        return function(e) {\n            fn.call(this, e, c);\n        };\n    }\n});\n\nvar combo = new <a href=\"#!/api/Ext.form.ComboBox\" rel=\"Ext.form.ComboBox\" class=\"docClass\">Ext.form.ComboBox</a>({\n\n    // Collapse combo when its element is clicked on\n    plugins: [ new Ext.DomObserver({\n        click: function(evt, comp) {\n            comp.collapse();\n        }\n    })],\n    store: myStore,\n    typeAhead: true,\n    mode: 'local',\n    triggerAction: 'all'\n});\n</code></pre>\n\n\n<p></p></p>\n</div></div></div><div id='cfg-options' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-cfg-options' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-cfg-options' class='name expandable'>options</a><span> : Array</span></div><div class='description'><div class='short'>data to be used to implicitly create a data store\nto back this list when the data source is local. ...</div><div class='long'><p><code>data</code> to be used to implicitly create a data store\nto back this list when the data source is <b>local</b>. If the\ndata for the list is remote, use the <code><a href=\"#!/api/Ext.ux.grid.filter.ListFilter-cfg-store\" rel=\"Ext.ux.grid.filter.ListFilter-cfg-store\" class=\"docClass\">store</a></code>\nconfig instead.</p>\n\n\n<br><p>Each item within the provided array may be in one of the\n\n\n<p>following formats:</p></p>\n\n<div class=\"mdetail-params\"><ul>\n<li><b>Array</b> :\n<pre><code>options: [\n    [11, 'extra small'], \n    [18, 'small'],\n    [22, 'medium'],\n    [35, 'large'],\n    [44, 'extra large']\n]\n</code></pre>\n</li>\n<li><b>Object</b> :\n<pre><code>labelField: 'name', // override default of 'text'\noptions: [\n    {id: 11, name:'extra small'}, \n    {id: 18, name:'small'}, \n    {id: 22, name:'medium'}, \n    {id: 35, name:'large'}, \n    {id: 44, name:'extra large'} \n]\n</code></pre>\n</li>\n<li><b>String</b> :\n<pre><code>options: ['extra small', 'small', 'medium', 'large', 'extra large']\n</code></pre>\n</li>\n\n</div></div></div><div id='cfg-phpMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-cfg-phpMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-cfg-phpMode' class='name expandable'>phpMode</a><span> : Boolean</span></div><div class='description'><div class='short'>Adjust the format of this filter. ...</div><div class='long'><p>Adjust the format of this filter. Defaults to false.</p>\n\n\n<br><p>When GridFilters <code> = false</code> (default):</p>\n\n\n<pre><code>// phpMode == false (default):\nfilter[0][data][type] list\nfilter[0][data][value] value1\nfilter[0][data][value] value2\nfilter[0][field] prod \n\n// phpMode == true:\nfilter[0][data][type] list\nfilter[0][data][value] value1, value2\nfilter[0][field] prod \n</code></pre>\n\n\n<p>When GridFilters <code> = true</code>:</p>\n\n<pre><code>// phpMode == false (default):\nfilter : [{\"type\":\"list\",\"value\":[\"small\",\"medium\"],\"field\":\"size\"}]\n\n// phpMode == true:\nfilter : [{\"type\":\"list\",\"value\":\"small,medium\",\"field\":\"size\"}]\n</code></pre>\n\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-store' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-cfg-store' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-cfg-store' class='name expandable'>store</a><span> : <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></span></div><div class='description'><div class='short'>The Ext.data.Store this list should use as its data source\nwhen the data source is remote. ...</div><div class='long'><p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> this list should use as its data source\nwhen the data source is <b>remote</b>. If the data for the list\nis local, use the <code><a href=\"#!/api/Ext.ux.grid.filter.ListFilter-cfg-options\" rel=\"Ext.ux.grid.filter.ListFilter-cfg-options\" class=\"docClass\">options</a></code> config instead.</p>\n</div></div></div><div id='cfg-updateBuffer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-cfg-updateBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-cfg-updateBuffer' class='name expandable'>updateBuffer</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>Number of milliseconds to wait after user interaction to fire an update. ...</div><div class='long'><p>Number of milliseconds to wait after user interaction to fire an update. Only supported\nby filters: 'list', 'numeric', and 'string'. Defaults to 500.</p>\n<p>Defaults to: <code>500</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-active' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-property-active' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-property-active' class='name expandable'>active</a><span> : Boolean</span></div><div class='description'><div class='short'>True if this filter is active. ...</div><div class='long'><p>True if this filter is active.  Use setActive() to alter after configuration.</p>\n</div></div></div><div id='property-menu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-property-menu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-property-menu' class='name expandable'>menu</a><span> : <a href=\"#!/api/Ext.menu.Menu\" rel=\"Ext.menu.Menu\" class=\"docClass\">Ext.menu.Menu</a></span></div><div class='description'><div class='short'>The filter configuration menu that will be installed into the filter submenu of a column menu. ...</div><div class='long'><p>The filter configuration menu that will be installed into the filter submenu of a column menu.</p>\n<p>Defaults to: <code>null</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addEvents' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'>Object|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> o, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a> Optional</span> )</div><div class='description'><div class='short'>Adds the specified events to the list of events which this Observable may fire. ...</div><div class='long'><p>Adds the specified events to the list of events which this Observable may fire.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Either an object with event names as properties with a value of <code>true</code>\nor the first event name string if multiple event names are being passed as separate parameters.</p>\n</div></li><li><span class='pre'>Optional</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">string</a><div class='sub-desc'><p>. Event name if multiple event names are being passed as separate parameters.\nUsage:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> handler, [Object scope], [Object options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object. ...</div><div class='long'><p>Appends an event handler to this object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the event to listen for.</p>\n</div></li><li><span class='pre'>handler</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The method the event invokes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.\nproperties. This may contain any of the following properties:<ul>\n<li><b>scope</b> : Object<div class=\"sub-desc\">The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></div></li>\n<li><b>delay</b> : Number<div class=\"sub-desc\">The number of milliseconds to delay the invocation of the handler after the event fires.</div></li>\n<li><b>single</b> : Boolean<div class=\"sub-desc\">True to add a handler to handle just the next firing of the event, and then remove itself.</div></li>\n<li><b>buffer</b> : Number<div class=\"sub-desc\">Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</div></li>\n<li><b>target</b> : Observable<div class=\"sub-desc\">Only call the handler if the event was fired on the target Observable, <i>not</i>\nif the event was bubbled up from a child Observable.</div></li>\n</ul><br></p>\n\n<p>\n<b>Combining Options</b><br>\nUsing the options argument, it is possible to combine different types of listeners:<br>\n<br>\nA delayed, one-time listener.\n<pre><code>myDataView.on('click', this.onClick, this, {\nsingle: true,\ndelay: 100\n});</code></pre>\n<p>\n<b>Attaching multiple handlers in 1 call</b><br>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.\n<p>\n<pre><code>myGridPanel.on({\n'click' : {\n    fn: this.onClick,\n    scope: this,\n    delay: 100\n},\n'mouseover' : {\n    fn: this.onMouseOver,\n    scope: this\n},\n'mouseout' : {\n    fn: this.onMouseOut,\n    scope: this\n}\n});</code></pre>\n<p>\nOr a shorthand syntax:<br>\n<pre><code>myGridPanel.on({\n'click' : this.onClick,\n'mouseover' : this.onMouseOver,\n'mouseout' : this.onMouseOut,\n scope: this\n});</code></pre>\n\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Destroys this filter by purging any event listeners, and removing any menus. ...</div><div class='long'><p>Destroys this filter by purging any event listeners, and removing any menus.</p>\n</div></div></div><div id='method-enableBubble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-enableBubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-enableBubble' class='name expandable'>enableBubble</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/Array events</span> )</div><div class='description'><div class='short'>Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...</div><div class='long'><p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable base class.</p>\n\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers. See Ext.Component.getBubbleTarget. The default\nimplementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the Component's immediate owner. But if a known target is required, this can be overridden to\naccess the required target more quickly.</p>\n\n\n<p>Example:</p>\n\n\n<pre><code>Ext.override(<a href=\"#!/api/Ext.form.Field\" rel=\"Ext.form.Field\" class=\"docClass\">Ext.form.Field</a>, {\n    //  Add functionality to Field&#39;s initComponent to enable the change event to bubble\n    initComponent : Ext.form.Field.prototype.initComponent.createSequence(function() {\n        this.enableBubble('change');\n    }),\n\n    //  We know that we want Field&#39;s events to bubble directly to the FormPanel.\n    getBubbleTarget : function() {\n        if (!this.formPanel) {\n            this.formPanel = this.findParentByType('form');\n        }\n        return this.formPanel;\n    }\n});\n\nvar myForm = new Ext.formPanel({\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/Array<div class='sub-desc'><p>The event name to bubble, or an Array of event names.</p>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, Object... args</span> ) : Boolean</div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name). ...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name).</p>\n\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>)\nby calling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n</div></li></ul></div></div></div><div id='method-fireUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-method-fireUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-method-fireUpdate' class='name expandable'>fireUpdate</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getSerialArgs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-getSerialArgs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-getSerialArgs' class='name expandable'>getSerialArgs</a>( <span class='pre'></span> ) : Object/Array<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method that is to get and return serialized filter data for\ntransmission to the server. ...</div><div class='long'><p>Template method that is to get and return serialized filter data for\ntransmission to the server.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object/Array</span><div class='sub-desc'><p>An object or collection of objects containing\nkey value pairs representing the current configuration of the filter.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-getSerialArgs' rel='Ext.ux.grid.filter.Filter-method-getSerialArgs' class='docClass'>Ext.ux.grid.filter.Filter.getSerialArgs</a></p></div></div></div><div id='method-getValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-getValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-getValue' class='name expandable'>getValue</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method that is to get and return the value of the filter. ...</div><div class='long'><p>Template method that is to get and return the value of the filter.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The value of this filter</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-getValue' rel='Ext.ux.grid.filter.Filter-method-getValue' class='docClass'>Ext.ux.grid.filter.Filter.getValue</a></p></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName</span> ) : Boolean</div><div class='description'><div class='short'>Checks to see if this object has any listeners for a specified event ...</div><div class='long'><p>Checks to see if this object has any listeners for a specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The name of the event to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the event is being listened for, else false</p>\n</div></li></ul></div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-init' class='name expandable'>init</a>( <span class='pre'>Object config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method that is to initialize the filter and install required menu items. ...</div><div class='long'><p>Template method that is to initialize the filter and install required menu items.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-init' rel='Ext.ux.grid.filter.Filter-method-init' class='docClass'>Ext.ux.grid.filter.Filter.init</a></p></div></div></div><div id='method-isActivatable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-isActivatable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-isActivatable' class='name expandable'>isActivatable</a>( <span class='pre'></span> ) : Boolean<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method that is to return true if the filter\nhas enough configuration information to be activated. ...</div><div class='long'><p>Template method that is to return <tt>true</tt> if the filter\nhas enough configuration information to be activated.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-isActivatable' rel='Ext.ux.grid.filter.Filter-method-isActivatable' class='docClass'>Ext.ux.grid.filter.Filter.isActivatable</a></p></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-on' class='name expandable'>on</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> handler, [Object scope], [Object options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object (shorthand for addListener.) ...</div><div class='long'><p>Appends an event handler to this object (shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The type of event to listen for</p>\n</div></li><li><span class='pre'>handler</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The method the event invokes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code><b>this</b></code> reference) in which the handler function is executed.\n<b>If omitted, defaults to the object which fired the event.</b></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-onCheckChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-onCheckChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-onCheckChange' class='name expandable'>onCheckChange</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-purgeListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-purgeListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-purgeListeners' class='name expandable'>purgeListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all listeners for this object ...</div><div class='long'><p>Removes all listeners for this object</p>\n</div></div></div><div id='method-relayEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'>Object o, Array events</span> )</div><div class='description'><div class='short'>Relays selected events from the specified Observable as if the events were fired by this. ...</div><div class='long'><p>Relays selected events from the specified Observable as if the events were fired by <tt><b>this</b></tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'><p>The Observable whose events this object is to relay.</p>\n</div></li><li><span class='pre'>events</span> : Array<div class='sub-desc'><p>Array of event names to relay.</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> handler, [Object scope]</span> )</div><div class='description'><div class='short'>Removes an event handler. ...</div><div class='long'><p>Removes an event handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Resume firing events. ...</div><div class='long'><p>Resume firing events. (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)\nIf events were suspended using the <tt><b>queueSuspended</b></tt> parameter, then all\nevents fired during event suspension will be sent to any listeners now.</p>\n</div></div></div><div id='method-serialize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-method-serialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-method-serialize' class='name expandable'>serialize</a>( <span class='pre'></span> ) : Object/Array</div><div class='description'><div class='short'>Returns the serialized filter data for transmission to the server\nand fires the 'serialize' event. ...</div><div class='long'><p>Returns the serialized filter data for transmission to the server\nand fires the 'serialize' event.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object/Array</span><div class='sub-desc'><p>An object or collection of objects containing\nkey value pairs representing the current configuration of the filter.\n@methodOf <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a></p>\n</div></li></ul></div></div></div><div id='method-setActive' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-method-setActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-method-setActive' class='name expandable'>setActive</a>( <span class='pre'>Boolean active, Boolean suppressEvent</span> )</div><div class='description'><div class='short'>Sets the status of the filter and fires the appropriate events. ...</div><div class='long'><p>Sets the status of the filter and fires the appropriate events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>active</span> : Boolean<div class='sub-desc'><p>The new filter state.</p>\n</div></li><li><span class='pre'>suppressEvent</span> : Boolean<div class='sub-desc'><p>True to prevent events from being fired.\n@methodOf <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a></p>\n</div></li></ul></div></div></div><div id='method-setValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-setValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-setValue' class='name expandable'>setValue</a>( <span class='pre'>Object value</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Template method that is to set the value of the filter. ...</div><div class='long'><p>Template method that is to set the value of the filter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>The value to set the filter</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-setValue' rel='Ext.ux.grid.filter.Filter-method-setValue' class='docClass'>Ext.ux.grid.filter.Filter.setValue</a></p></div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'>Boolean queueSuspended</span> )</div><div class='description'><div class='short'>Suspend the firing of all events. ...</div><div class='long'><p>Suspend the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : Boolean<div class='sub-desc'><p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events;</p>\n</div></li></ul></div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='defined-in docClass'>Ext.util.Observable</a><br/><a href='source/ext-all-debug-w-comments.html#Ext-util-Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-un' class='name expandable'>un</a>( <span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> eventName, <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> handler, [Object scope]</span> )</div><div class='description'><div class='short'>Removes an event handler (shorthand for removeListener.) ...</div><div class='long'><p>Removes an event handler (shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-validateRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.grid.filter.ListFilter'>Ext.ux.grid.filter.ListFilter</span><br/><a href='source/ListFilter.html#Ext-ux-grid-filter-ListFilter-method-validateRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.ListFilter-method-validateRecord' class='name expandable'>validateRecord</a>( <span class='pre'><a href=\"#!/api/Ext.data.Record\" rel=\"Ext.data.Record\" class=\"docClass\">Ext.data.Record</a> record</span> ) : Boolean</div><div class='description'><div class='short'>Template method that is to validate the provided Ext.data.Record\nagainst the filters configuration. ...</div><div class='long'><p>Template method that is to validate the provided <a href=\"#!/api/Ext.data.Record\" rel=\"Ext.data.Record\" class=\"docClass\">Ext.data.Record</a>\nagainst the filters configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : <a href=\"#!/api/Ext.data.Record\" rel=\"Ext.data.Record\" class=\"docClass\">Ext.data.Record</a><div class='sub-desc'><p>The record to validate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the record is valid within the bounds\nof the filter, false otherwise.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/Ext.ux.grid.filter.Filter-method-validateRecord' rel='Ext.ux.grid.filter.Filter-method-validateRecord' class='docClass'>Ext.ux.grid.filter.Filter.validateRecord</a></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-activate' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-event-activate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-event-activate' class='name expandable'>activate</a>( <span class='pre'><a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a> this</span> )</div><div class='description'><div class='short'>Fires when an inactive filter becomes active ...</div><div class='long'><p>Fires when an inactive filter becomes active</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-deactivate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-event-deactivate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-event-deactivate' class='name expandable'>deactivate</a>( <span class='pre'><a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a> this</span> )</div><div class='description'><div class='short'>Fires when an active filter becomes inactive ...</div><div class='long'><p>Fires when an active filter becomes inactive</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-serialize' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-event-serialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-event-serialize' class='name expandable'>serialize</a>( <span class='pre'>Array/Object data, <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a> filter</span> )</div><div class='description'><div class='short'>Fires after the serialization process. ...</div><div class='long'><p>Fires after the serialization process. Use this to attach additional parameters to serialization\ndata before it is encoded and sent to the server.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Array/Object<div class='sub-desc'><p>A map or collection of maps representing the current filter configuration.</p>\n</div></li><li><span class='pre'>filter</span> : <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a><div class='sub-desc'><p>The filter being serialized.</p>\n</div></li></ul></div></div></div><div id='event-update' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.ux.grid.filter.Filter' rel='Ext.ux.grid.filter.Filter' class='defined-in docClass'>Ext.ux.grid.filter.Filter</a><br/><a href='source/Filter.html#Ext-ux-grid-filter-Filter-event-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.grid.filter.Filter-event-update' class='name expandable'>update</a>( <span class='pre'><a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a> this</span> )</div><div class='description'><div class='short'>Fires when a filter configuration has changed ...</div><div class='long'><p>Fires when a filter configuration has changed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.ux.grid.filter.Filter\" rel=\"Ext.ux.grid.filter.Filter\" class=\"docClass\">Ext.ux.grid.filter.Filter</a><div class='sub-desc'><p>The filter object.</p>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"id":"class-Ext.ux.grid.filter.ListFilter","html_meta":{},"tagname":"class","extends":"Ext.ux.grid.filter.Filter"});